"use strict";const video=document.getElementById("my-video"),SUCCESS="success",ERROR="error",startVideo=()=>{navigator.mediaDevices.getUserMedia({video:{}}).then(e=>{video.srcObject=e}).catch(e=>console.error(e))},facesData=[],faceMatcher=async()=>{const e=await Promise.all(FACE_MODELS.map(e=>{e=JSON.parse(e);const a=[];for(let t=0;t<e.descriptors.length;t++)a.push(new Float32Array(e.descriptors[t]));return new faceapi.LabeledFaceDescriptors(e.label,a)}));return new faceapi.FaceMatcher(e,.8)};Promise.all([faceapi.loadSsdMobilenetv1Model(BASE_URL+"/models"),faceapi.loadFaceRecognitionModel(BASE_URL+"/models"),faceapi.loadFaceLandmarkModel(BASE_URL+"/models")]).then(startVideo);const run=async()=>{const e=faceapi.createCanvasFromMedia(video),a=document.getElementById("target-video"),t={width:video.offsetWidth,height:video.height};e.setAttribute("id","canvas-layer"),a.append(e),faceapi.matchDimensions(e,t);const c=await faceMatcher();console.clear(),setInterval(async()=>{const a=await faceapi.detectSingleFace(video).withFaceLandmarks().withFaceDescriptor();if(a){const i=faceapi.resizeResults(a,t),o=c.findBestMatch(a.descriptor);e.getContext("2d").clearRect(0,0,e.width,e.height),faceapi.draw.drawDetections(e,i);const s=i.detection.box,{label:r,distance:n}=o,d=USERS[r],l=parseInt(100*n,10);let h;l<=40?($.ajax({method:"POST",url:RECORD_ATTENDANCE_ROUTE,data:{mail:r},dataType:"json",headers:{"X-CSRF-TOKEN":$('meta[name="csrf-token"]').attr("content")},success:function(e){e.status===SUCCESS&&(alert(e.message),window.location.href="/")}}),h=await d+" ("+(100-l)+")"):h="Tidak dikenal",new faceapi.draw.DrawBox(s,{label:h}).draw(e)}else e.getContext("2d").clearRect(0,0,e.width,e.height)},100)};video.addEventListener("play",run);
